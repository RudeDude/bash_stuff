#!/bin/bash

#### Source https://www.linuxjournal.com/content/shell-scripting-dungeons-dragons-and-dice
# Shell Scripting: Dungeons, Dragons and Dice
# by Dave Taylor on February 2, 2018

### Perhaps better to install the `rolldice` package on Ubuntu
### BUT there is no such package on CentOS or EPEL

### Anyone who attempts to generate random numbers by deterministic means is, of course, living in a state of sin.
###   --John von Neumann
### $RANDOM is an internal Bash function (not a constant) that returns a pseudorandom integer in the range 0 - 32767. It should not be used to generate an encryption key.

### Uses process ID as random seed
RANDOM=$$
### See `man urandom` for Linux device info
### Uses "fast" pseudorandom device
#RANDOM=$(dd if=/dev/random bs=1 count=1 2>/dev/null | od -N 1 |head -n 1 | awk '{ print $2 }'| sed s/^0*//) # Fancy seed
### Uses "real" random device, possibly a blocking call
# RANDOM=$(dd if=/dev/urandom bs=1 count=1 2>/dev/null | od -N 1 |head -n 1 | awk '{ print $2 }'| sed s/^0*//) # Fancy seed

rolldie()
{
   local result=$1 sides=$2
   rolled=$(( ( $RANDOM % $sides ) + 1 ))
   eval $result=$rolled
}


for request in $* ; do
  dice=$(echo $request | cut -dd -f1)
  sides=$(echo $request | cut -dd -f2)
  echo "Rolling $dice $sides-sided dice"
  sum=0  # reset
  while [ ${dice:=1} -gt 0 ] ; do
    rolldie die $sides
#    die=$(shuf -i 1-$sides -n 1)
    echo "     dice roll = $die"
    sum=$(( $sum + $die ))
    dice=$(( $dice - 1 ))
  done
  echo "  sum total = $sum"
done

